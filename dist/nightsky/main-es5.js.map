{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/funcionalities/about/about.component.ts","webpack:///src/app/core/funcionalities/about/about.component.html","webpack:///src/app/core/funcionalities/curriculum/curriculum.component.ts","webpack:///src/app/core/funcionalities/curriculum/curriculum.component.html","webpack:///src/app/core/funcionalities/games/calculadora/calculadora.component.ts","webpack:///src/app/core/funcionalities/games/calculadora/calculadora.component.html","webpack:///src/app/core/funcionalities/games/games-routing.module.ts","webpack:///src/app/core/funcionalities/games/games.component.ts","webpack:///src/app/core/funcionalities/games/games.component.html","webpack:///src/app/core/funcionalities/games/games.module.ts","webpack:///src/app/shared/abstract/subscriptions-finisher.class.ts","webpack:///src/app/shared/components/button/button.component.ts","webpack:///src/app/shared/components/button/button.component.html","webpack:///src/app/shared/components/navbar/navbar.component.ts","webpack:///src/app/shared/components/navbar/navbar.component.html","webpack:///src/app/shared/directives/only-number/only-number.directive.ts","webpack:///src/app/shared/models/chrono-status-time.model.ts","webpack:///src/app/shared/models/device-info.model.ts","webpack:///src/app/shared/services/utils/utils.service.ts","webpack:///src/app/shared/shared.module.ts/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","loadChildren","m","GamesModule","component","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","us","translate","initObservables","addLangs","browserLang","getBrowserLang","use","match","selector","templateUrl","styleUrls","changeDetection","OnPush","HttpLoaderFactory","httpClient","AppModule","extend","loader","provide","useFactory","deps","declarations","providers","bootstrap","AboutComponent","router","location","href","goLinkedin","CurriculumComponent","skillOrder","skillList","tech","level","switchSortSkillListBy","prop","sort","a","b","CalculadoraComponent","fb","cdr","stopCheckResult","gameTypesNames","gameTypesSymbols","chronoList","howManyNumbers","currentGameType","initGame","finishSubscriptions","text","capitalizeText","propName","calculadora","get","value","ev","resetResults","initForm","game","findIndex","el","numDigit","parseInt","Math","random","toString","TypeGameName","firstNumber","generateNumber","secondNumber","resultGenerated","getFinalResult","invalidResults","Infinity","some","x","result","valueChanges","pipe","subscribe","inputValue","length","setValue","reset","firstN","secondN","parseFloat","toFixed","resultOperation","timeMiliSeconds","Date","now","chrono","getMiliseconds","miliSeconds","seconds","indexOf","slice","minits","hours","timeLabel","finalStr","getTime","time","intergerTime","decimalTime","unshift","win","formGet","getChronoNumber","election","next","timer","setTimeout","markForCheck","clearTimeout","numbersForm","generateNumbersGame","group","status","control","checkResult","children","pathMatch","GamesRoutingModule","forChild","GamesComponent","SubscriptionsFinisher","finishTakeUntil$","complete","finishSubsList","forEach","ButtonComponent","class","label","translatable","clicked","NavbarComponent","currentLang","console","log","route","url","includes","switchLanguaje","OnlyNumberDirective","allowKeys","nativeElement","target","key","preventDefault","ChronoStatusTime","DeviceInfo","type","width","UtilsService","deviceType$","getWindowSize","checkWidth","device","window","innerWidth","lowercased","toLowerCase","replace","toUpperCase","providedIn","SharedModule","environment","production","bootstrapModule","catch","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AboutComponent } from './core/funcionalities/about/about.component';\nimport { CurriculumComponent } from './core/funcionalities/curriculum/curriculum.component';\n\nconst routes: Routes = [\n  {\n    path: 'games', loadChildren: () => import( './core/funcionalities/games/games.module' ).then( m => m.GamesModule ),\n  },\n  {\n    path: 'about', component: AboutComponent,\n  },\n  {\n    path: 'curriculum', component: CurriculumComponent\n  },\n  {\n    path: '**', redirectTo: 'about'\n  }\n];\n\n@NgModule( {\n  imports: [\n    RouterModule.forRoot( routes )\n  ],\n  exports: [\n    RouterModule,\n  ]\n})\nexport class AppRoutingModule { }\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\r\nimport { UtilsService } from './shared/services/utils/utils.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component( {\r\n  selector: 'ns-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: [ './app.component.scss' ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n} )\r\nexport class AppComponent {\r\n\r\n  constructor(\r\n    private us: UtilsService,\r\n    private translate: TranslateService\r\n  ) {\r\n    this.us.initObservables();\r\n\r\n    this.translate.addLangs( [ 'es', 'en' ] );\r\n\r\n    const browserLang = translate.getBrowserLang();\r\n    this.translate.use( browserLang.match( /es|en/ ) ? browserLang : 'en' );\r\n  }\r\n\r\n}\r\n","<div>\r\n  <ns-navbar></ns-navbar>\r\n  <div id=\"root_wrapper\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { GamesModule } from './core/funcionalities/games/games.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { NavbarComponent } from './shared/components/navbar/navbar.component';\r\nimport { SharedModule } from './shared/shared.module.ts/shared.module';\r\nimport { AboutComponent } from './core/funcionalities/about/about.component';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { CurriculumComponent } from './core/funcionalities/curriculum/curriculum.component';\r\n\r\n// AoT requires an exported function for factories\r\nexport function HttpLoaderFactory( httpClient: HttpClient ) {\r\n  return new TranslateHttpLoader( httpClient, './assets/i18n/', '.json');\r\n}\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    AboutComponent,\r\n    CurriculumComponent,\r\n  ],\r\n  imports: [\r\n    HttpClientModule,\r\n    GamesModule,\r\n    BrowserModule,\r\n    RouterModule,\r\n    AppRoutingModule,\r\n    TranslateModule.forRoot( {\r\n      extend: true,\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [ HttpClient ]\r\n      }\r\n    } )\r\n  ],\r\n  providers: [ SharedModule ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'ns-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  goLinkedin() {\n    location.href = \"https://www.linkedin.com/in/jorge-jes%C3%BAs-campoy-l%C3%B3pez-53829a129/\";\n  }\n\n}\n","<article class=\"animated fast fadeIn\">\r\n  <div class=\"container card\">\r\n    <div class=\"box container_picture\"><img class=\"picture\"></div>\r\n    <div class=\"box\"><p class=\"ff_raleway\">{{'ABOUT.Description.first' | translate}}</p></div>\r\n  </div>\r\n  <div class=\"container card\">\r\n    <div class=\"box\"><p class=\"ff_raleway\">{{'CONTACT.Labels.email' | translate}}: {{'CONTACT.Links.email' | translate}}</p></div>\r\n    <p class=\"ff_raleway pointer\" (click)=\"goLinkedin()\">{{'CONTACT.Labels.linkedin' | translate}}</p>\r\n  </div>\r\n</article>","import { Component, OnInit } from '@angular/core';\nimport { Skill } from '../../../shared/models/skills.model';\n\n@Component( {\n  selector: 'ns-curriculum',\n  templateUrl: './curriculum.component.html',\n  styleUrls: [ './curriculum.component.scss' ]\n} )\nexport class CurriculumComponent implements OnInit {\n  skillOrder = false;\n  skillList: Skill[] = [\n    { tech: \"Angular V( 2 - 9 )\", level: 8 },\n    { tech: \"Developer Tools\", level: 8 },\n    { tech: \"Ionic 4\", level: 7 },\n    { tech: \"Typescript / Javascript\", level: 9 },\n    { tech: \"HTML5\", level: 9 },\n    { tech: \"CSS3 / SASS / SCSS\", level: 8 },\n    { tech: \"NGRX / Redux\", level: 8 },\n    { tech: \"ReactiveX / Rxjs\", level: 8 },\n    { tech: \"Git / Github, Gitlab, Bitbucket\", level: 7 },\n    { tech: \"Svn\", level: 6 },\n    { tech: \"Bootstrap\", level: 8 },\n    { tech: \"Jquery\", level: 7 },\n    { tech: \"Jasmine / Karma\", level: 5 },\n    { tech: \"Reactive forms\", level: 7 },\n    { tech: \"Jenkins\", level: 1 },\n    { tech: \"Webpack\", level: 5 },\n    { tech: \"Npm\", level: 6 },\n    { tech: \"RWD / Responsive Web Design\", level: 8 }\n  ];\n\n  constructor() {\n    this.switchSortSkillListBy();\n  }\n\n  ngOnInit(): void {\n  }\n\n  switchSortSkillListBy( prop: 'tech' | 'level' = 'tech' ) {\n    this.skillOrder = !this.skillOrder;\n    this.skillList = this.skillList.sort( ( a, b ) => {\n      return this.skillOrder === true\n        ? ( a[prop] > b[prop] ) ? 1 : -1\n        : ( a[prop] < b[prop] ) ? 1 : -1\n    } )\n  };\n\n}\n","<article class=\"animated fast fadeIn\">\n\n  <div class=\"container\">\n    <div class=\"card\">\n      <div class=\"fields\">\n        <div class=\"field\">\n          <h4>{{ 'CURRICULUM.Titles.description' | translate }}</h4>\n          <p class=\"p_03 ff_raleway\" *ngFor=\"let desc of [1,2,3]\">\n            {{ 'CURRICULUM.Descriptions._0' + desc | translate }}\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  <!-- Funciones realizadas -->\n  <div class=\"container\">\n    <div class=\"card\">\n      <div class=\"fields\">\n        <div class=\"field\">\n          <h4>{{ 'CURRICULUM.Titles.functionsPerformed' | translate }}</h4>\n          <ul>\n            <li *ngFor=\"let func of [1,2,3,4,5,6,7,8,9]\">{{ 'CURRICULUM.FunctionsPerformed._0' + func | translate }}</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  <!-- Tecnologías -->\n  <div class=\"container\">\n    <div class=\"card\">\n      <div class=\"fields\">\n        <div class=\"field\">\n          <h4>{{ 'CURRICULUM.Titles.technologies' | translate }}</h4>\n          <table class=\"table_skill\">\n            <tr>\n              <th class=\"left\" (click)=\"switchSortSkillListBy('tech')\">{{ 'CURRICULUM.Titles.technology' | translate }}</th>\n              <th class=\"right\" (click)=\"switchSortSkillListBy('level')\">{{ 'CURRICULUM.Titles.level' | translate }}</th>\n            </tr>\n            <tr class=\"skill_list\" *ngFor=\"let skill of skillList\">\n              <td class=\"p_03 ff_raleway\">{{skill.tech}}</td>\n              <td class=\"p_03 right ff_raleway\">{{skill.level}}</td>\n            </tr>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n</article>","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { takeUntil } from 'rxjs/operators'\r\nimport { Subject } from 'rxjs';\r\nimport { TypeGameName } from '../../../../shared/types/type-games-names.type';\r\nimport { UtilsService } from '../../../../shared/services/utils/utils.service';\r\nimport { TypeGameSymbol } from '../../../../shared/types/type-games-symbols.type';\r\nimport { SubscriptionsFinisher } from '../../../../shared/abstract/subscriptions-finisher.class';\r\nimport { ChronoStatus } from '../../../../shared/models/chrono.status.model';\r\nimport { ChronoStatusTime } from '../../../../shared/models/chrono-status-time.model';\r\nimport { ChronoStatusTimeLabelType } from '../../../../shared/types/chrono-status-time-label.type';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component( {\r\n  selector: 'ns-calculadora',\r\n  templateUrl: './calculadora.component.html',\r\n  styleUrls: [ './calculadora.component.scss' ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n} )\r\nexport class CalculadoraComponent extends SubscriptionsFinisher implements OnInit {\r\n\r\n  private readonly stopCheckResult: Subject<void> = new Subject();\r\n  private chrono: number;\r\n  private resultOperation: number;\r\n  readonly gameTypesNames: TypeGameName[] = [ 'sum', 'subtract', 'multiply', 'divide' ];\r\n  readonly gameTypesSymbols: TypeGameSymbol[] = [ '+', '-', 'x', '/' ];\r\n  chronoList: ChronoStatus[] = [];\r\n  calculadora: FormGroup;\r\n  currentGameType: number;\r\n  howManyNumbers: number = 1;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private us: UtilsService,\r\n    private cdr: ChangeDetectorRef,\r\n  ) { super() }\r\n\r\n  ngOnInit(): void {\r\n    this.currentGameType = 3;\r\n    this.initGame( 'sum' );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.finishSubscriptions( this.stopCheckResult );\r\n  }\r\n\r\n  capitalize( text: string ): string {\r\n    return this.us.capitalizeText( text );\r\n  }\r\n\r\n  formGet( propName: string ) {\r\n    return this.calculadora.get( propName ).value;\r\n  }\r\n\r\n  resetResults(): void {\r\n    this.chronoList = [];\r\n  }\r\n\r\n  modifyHowManyNumbers( ev: '+' | '-' ) {\r\n    this.resetResults();\r\n    if ( ev === '-' && this.howManyNumbers > 1 ) {\r\n      this.howManyNumbers--;\r\n    } else if ( ev === '+' ) {\r\n      this.howManyNumbers++;\r\n    }\r\n    this.initForm( this.howManyNumbers, this.gameTypesNames[ this.currentGameType ] );\r\n  }\r\n\r\n  initGame( game: TypeGameName ) {\r\n    this.resetResults();\r\n    this.currentGameType = this.gameTypesNames.findIndex( el => el === game );\r\n    this.initForm( this.howManyNumbers, game );\r\n  };\r\n\r\n  /**\r\n   * Genera un numero aleatorio\r\n   * @param numDigit Cantidad de numeros modificados por los botones de Nivel -> modifyHowManyNumbers()\r\n   * @return Number\r\n   */\r\n  private generateNumber( numDigit: number ): number {\r\n    return parseInt( ( Math.random() * ( numDigit * 10 ) ).toString() );\r\n  }\r\n\r\n  /**\r\n   * Conseguimos numeros validos para el formulario del juego\r\n   * @param howManyNumbers Cantidad de numeros modificados por los botones de Nivel -> modifyHowManyNumbers()\r\n   * @param TypeGameName sumar | restar | multiplicacion | division\r\n   */\r\n  private generateNumbersGame( howManyNumbers, TypeGameName ) {\r\n    const\r\n      firstNumber = this.generateNumber( howManyNumbers ),\r\n      secondNumber = this.generateNumber( howManyNumbers ),\r\n      resultGenerated = this.getFinalResult( TypeGameName, firstNumber, secondNumber ),\r\n      invalidResults = [ Infinity, 0 ]\r\n      ;\r\n    if ( !invalidResults.some( x => x === resultGenerated ) )\r\n      return {\r\n        firstNumber,\r\n        secondNumber,\r\n        resultGenerated\r\n      }\r\n  }\r\n\r\n  /**\r\n   * Comprobamos el resultado final con el valor del input\r\n   * @param result Resultado obtenido del metodo getFinalResult()\r\n   */\r\n  private checkResult( result: number ) {\r\n    this.calculadora.get( 'result' ).valueChanges.pipe( takeUntil( this.stopCheckResult ) ).subscribe(\r\n      ( inputValue: string ) => {\r\n        // Si no hay valores en el input no continuamos\r\n        if ( inputValue.length === 0 ) { return }\r\n        // Para poder guardar el valor como resultado ambos tienen que tener al menos la misma cantidad de digitos\r\n        if ( result?.toString().length === inputValue.length ) {\r\n          this.calculadora.get( 'status' ).setValue( result === +inputValue ? true : false );\r\n          this.reset();\r\n        }\r\n      } )\r\n  };\r\n\r\n  /**\r\n   * Obtenemos el resultado en  base a el tipo de juego y los operandos antes de inicializar el formulario\r\n   * @param TypeGameName sumar | restar | multiplicacion | division\r\n   * @param firstN Primer operando\r\n   * @param secondN Segundo operando\r\n   * @return Retorna el resultado final de la operacion\r\n   */\r\n  private getFinalResult( TypeGameName: TypeGameName, firstN: number, secondN: number ): number {\r\n    let result: number;\r\n    switch ( TypeGameName ) {\r\n      case 'multiply':\r\n        result = firstN * secondN;\r\n        break;\r\n      case 'divide':\r\n        result = parseFloat( ( firstN / secondN ).toFixed( 1 ) );\r\n        break;\r\n      case 'sum':\r\n        result = firstN + secondN;\r\n        break;\r\n      case 'subtract':\r\n        result = firstN - secondN;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.resultOperation = result;\r\n    return result\r\n  }\r\n\r\n  /**\r\n   * Consigue el tiempo en minutos u horas desde el inicio del juego\r\n   */\r\n  getChronoNumber(): ChronoStatusTime {\r\n    const timeMiliSeconds: number = Date.now() - this.chrono ;\r\n    const getMiliseconds = ( miliSeconds ): number | null => {\r\n      const seconds = ( miliSeconds / 1000 ).toString();\r\n      if ( seconds.indexOf( '.' ) != -1 ) {\r\n        return +seconds.slice( seconds.indexOf( '.' ) + 1, seconds.indexOf( '.' ) + 3 )\r\n      } else return null;\r\n    }\r\n    let\r\n      miliSeconds: number = getMiliseconds( timeMiliSeconds ),\r\n      seconds = +( timeMiliSeconds / 1000 ).toFixed( 0 ),\r\n      minits: number = 0,\r\n      hours: number = 0,\r\n      timeLabel: ChronoStatusTimeLabelType = 'seg',\r\n      finalStr: string\r\n      ;\r\n    \r\n    /**\r\n     * Funcion which recibe a param as time in miliseconds then this time willbe reduce\r\n     * dividing\r\n     * @description One object which have the number\r\n     *  right(decimalTime) to point and left(intergerTime)\r\n     * @param time Number which represent time of number interger like 324331230\r\n     * @returns  {intergerTime: 12, decimalTime: 03}\r\n     */\r\n    const getTime = ( time: number)  => {\r\n      let\r\n        intergerTime: number = 0,\r\n        decimalTime: number = time\r\n        ;\r\n      if ( time >= 60 ) {\r\n        while ( decimalTime >= 60 ) {\r\n          decimalTime -= 60;\r\n          intergerTime++;\r\n        }\r\n      }\r\n      if ( intergerTime > 0 ) {\r\n        return {\r\n          intergerTime,\r\n          decimalTime\r\n        }\r\n      }\r\n    }\r\n\r\n    // Get numbers\r\n    if ( miliSeconds >= 60 ) {\r\n      const result = getTime( miliSeconds );\r\n      if ( result ) {\r\n        seconds = result.intergerTime;\r\n        miliSeconds = result.decimalTime;\r\n      }\r\n    }\r\n    if ( seconds >= 60 ) {\r\n      const result = getTime( seconds );\r\n      if ( result ) {\r\n        minits = result.intergerTime;\r\n        seconds = result.decimalTime;\r\n      }\r\n    }\r\n    if ( minits >= 60 ) {\r\n      const result = getTime( minits );\r\n      if ( result ) {\r\n        hours = result.intergerTime;\r\n        minits = result.decimalTime;\r\n      }\r\n    }\r\n\r\n    // Set time label\r\n    if ( hours > 0 ) {\r\n      timeLabel = \"hrs\";\r\n      finalStr = `${ hours }.${ minits }`;\r\n    } else if ( minits > 0 ) {\r\n      finalStr = `${ minits }.${ seconds }`;\r\n      timeLabel = \"min\";\r\n    } else {\r\n      finalStr = `${ seconds }.${ miliSeconds }`;\r\n      timeLabel = \"seg\";\r\n    }\r\n    return new ChronoStatusTime( +finalStr, timeLabel );\r\n  }\r\n\r\n  /**\r\n   * Reset game\r\n   */\r\n  private reset() {\r\n    this.chronoList.unshift( { win: this.formGet( 'status' ), time: this.getChronoNumber(), result: this.resultOperation, election: this.formGet( 'result' ) } );\r\n    this.stopCheckResult.next();\r\n    const timer = setTimeout( () => {\r\n      this.initForm( this.howManyNumbers, this.gameTypesNames[ this.currentGameType ] );\r\n      this.cdr.markForCheck();\r\n      clearTimeout( timer );\r\n    }, 500 );\r\n  };\r\n\r\n  /**\r\n   * Inicializa el formulario\r\n   * @param howManyNumbers Cantidad de numeros modificados por los botones de Nivel -> modifyHowManyNumbers()\r\n   * @param TypeGameName sumar | restar | multiplicacion | division\r\n   */\r\n  private initForm( howManyNumbers: number, TypeGameName: TypeGameName ) {\r\n    const numbersForm = this.generateNumbersGame( howManyNumbers, TypeGameName ) ?? this.generateNumbersGame( howManyNumbers, TypeGameName );\r\n    this.calculadora = this.fb.group( {\r\n      firstNumber: numbersForm.firstNumber,\r\n      secondNumber: numbersForm.secondNumber,\r\n      result: null,\r\n      status: this.fb.control( null ),\r\n      TypeGameName: this.fb.control( TypeGameName ),\r\n    } );\r\n    this.chrono = Date.now();\r\n    this.checkResult( numbersForm.resultGenerated );\r\n  };\r\n\r\n}\r\n","<article class=\"animated fast fadeIn\">\r\n\r\n  <article class=\"wrapper_calc\">\r\n    <section *ngIf=\"calculadora\"\r\n    class=\"calc card\">\r\n    <h1>{{ 'GAMES.Labels.calculator' | translate }}</h1>\r\n    <div class=\"calc_box\">\r\n      <!-- Texto e input -->\r\n      <div class=\"box_left\">\r\n        <div [formGroup]=\"calculadora\">\r\n          <div [ngSwitch]=\"formGet('TypeGameName')\">\r\n            <h5>{{ 'GAMES.Phrases.howMuch' | translate }} {{formGet('firstNumber')}}\r\n              <span *ngFor=\"let game of gameTypesNames; let i = index\">\r\n                <span *ngSwitchCase=\"game\">{{gameTypesSymbols[i]}}</span>\r\n              </span>\r\n              {{formGet('secondNumber')}} ?\r\n              {{ 'GAMES.Labels.level' | translate }} {{howManyNumbers}}\r\n            </h5>\r\n          </div>\r\n          <input formControlName=\"result\"\r\n          nsOnlyNumber>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- Botones -->\r\n    <div class=\"buttons\">\r\n      <div class=\"wrapper\">\r\n        <div class=\"pair\"\r\n        *ngFor=\"let game of gameTypesNames; let i = index\">\r\n            <ns-button [class]=\"'w_small bg_blue'\"\r\n              [label]=\"'GAMES.Labels.' + game\"\r\n              (clicked)=\"initGame(game)\"></ns-button>\r\n            </div>\r\n          </div>\r\n          <div>\r\n          </div>\r\n          <div class=\"wrapper\">\r\n            <div class=\"pair\">\r\n              <ns-button [class]=\"'w_small bg_blue'\"\r\n              [label]=\"'GAMES.Phrases.levelUp'\"\r\n              (clicked)=\"modifyHowManyNumbers('+')\"></ns-button>\r\n            </div>\r\n            <div class=\"pair\">\r\n              <ns-button [class]=\"'w_small bg_blue'\"\r\n              [label]=\"'GAMES.Phrases.levelDown'\"\r\n              (clicked)=\"modifyHowManyNumbers('-')\"></ns-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      \r\n      <!-- RESULTADOS -->\r\n      <section class=\"results card\">\r\n        <h2>{{ 'GAMES.Labels.results' | translate }}</h2>\r\n        <table>\r\n          <tr>\r\n            <th>\r\n              <h5>{{ 'GAMES.Labels.time' | translate }}</h5>\r\n            </th>\r\n            <th>\r\n              <h5>{{ 'GAMES.Labels.election' | translate }}</h5>\r\n            </th>\r\n            <th>\r\n              <h5>{{ 'GAMES.Labels.result' | translate }}</h5>\r\n            </th>\r\n          </tr>\r\n          <tr class=\"animated faster slideHiddenInUp\"\r\n          [ngClass]=\"{\r\n            'win': result?.win === true,\r\n            'lose': result?.win === false \r\n          }\"\r\n          *ngFor=\"let result of chronoList\">\r\n          <td>{{result?.time?.chrono}} {{result?.time?.label}}</td>\r\n          <td>{{result?.election}}</td>\r\n          <td>{{result?.result}}</td>\r\n        </tr>\r\n      </table>\r\n    </section>\r\n  </article>\r\n  \r\n</article>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GamesComponent } from './games.component';\nimport { CalculadoraComponent } from './calculadora/calculadora.component';\n\nconst routes: Routes = [\n  {\n    path: 'games', component: GamesComponent,\n    children: [\n      {\n        path: 'calculadora', component: CalculadoraComponent\n      },\n      {\n        path: '**', redirectTo: 'calculadora', pathMatch: 'full'\n      }\n    ]\n  },\n];\n\n@NgModule( {\n  imports: [ RouterModule.forChild( routes ) ],\n  exports: [ RouterModule ]\n} )\nexport class GamesRoutingModule { }\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ButtonModel } from '../../../shared/models/button.model';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'ns-games',\r\n  templateUrl: './games.component.html',\r\n  styleUrls: [ './games.component.scss' ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GamesComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    public translate: TranslateService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule  } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { GamesRoutingModule } from './games-routing.module';\nimport { GamesComponent } from './games.component';\nimport { CalculadoraComponent } from './calculadora/calculadora.component';\nimport { SharedModule } from '../../../shared/shared.module.ts/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    GamesRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    SharedModule\n  ],\n  exports: [\n  ],\n  declarations: [\n    GamesComponent,\n    CalculadoraComponent,\n  ],\n  providers: [ ]\n})\nexport class GamesModule { }\n","import { Subject } from 'rxjs';\r\nimport { CompletableObservable } from './subscription-finisher.type';\r\nimport { OnDestroy } from '@angular/core';\r\n\r\n/** \r\n * @usageNotes `default` If the child not use ngOnDestroy() this ngOnDestroy will finish `finishTakeUntil$`\r\n * in all  the takeUntils which use it;\r\n * @usageNotes If child component use ngOnDestroy then call in these ngOnDestroy `finishSubscriptions()`\r\n * @property finishTakeUntil$ Use in takeUntil for finish him\r\n * @method finishSubscriptions pass observables or subscriptions for finish him\r\n */\r\nexport abstract class SubscriptionsFinisher implements OnDestroy {\r\n\r\n  /** \r\n   * @param finishTakeUntil$ Usar para finalizar los takeUntil\r\n   * @description finishTakeUntil$ emitirá un next para finalizar los takeUntil\r\n   * @example this.mySubscription.pipe(takeUntil(this.finishTakeUntil$)).subscribe()\r\n   */\r\n  protected readonly finishTakeUntil$: Subject<string> = new Subject();\r\n\r\n  /**\r\n   * @description Por defecto siempre se finaliza finishTakeUntil$\r\n   * @param finishSubsList  Recibe un array de nombres de observables de los que finalizar las suscripciones.\r\n   * @example \r\n   * public firstSubscription: Observable<any>;\r\n   * private secondSubscription: Subject<any>;\r\n   * ngOnDestroy() { this.finishSubscriptions() };\r\n   * ngOnDestroy() { this.finishSubscriptions(this.firstSubscription, this.secondSubscription) };\r\n   */\r\n  protected finishSubscriptions( ...finishSubsList: CompletableObservable[] ): void {\r\n    this.finishTakeUntil$.next( 'Finish all takeUntil subscriptions' );\r\n    this.finishTakeUntil$.complete();\r\n    finishSubsList.forEach( el => {\r\n      if ( el && el[ 'complete' ] ) { el[ 'complete' ]() };\r\n      if ( el && el[ 'unsubscribe' ] ) { el[ 'unsubscribe' ]() };\r\n    } );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.finishSubscriptions();\r\n  }\r\n\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ns-button',\r\n  templateUrl: './button.component.html',\r\n  styleUrls: [ './button.component.scss' ]\r\n} )\r\nexport class ButtonComponent {\r\n  @Input() class: string = ''; // 'w_normal bg_red c_white'\r\n  @Input() label: string = ''; // Texto en el botón\r\n  @Input() translatable: boolean = true;\r\n\r\n  @Output() clicked: EventEmitter<void> = new EventEmitter();\r\n}\r\n","<button\r\n  class=\"{{class}}\"\r\n  (click)=\"clicked.emit()\">\r\n  <div *ngIf=\"translatable\">\r\n    {{label | translate}}\r\n  </div>\r\n  <div *ngIf=\"!translatable\">\r\n    {{label}}\r\n  </div>\r\n</button>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'ns-navbar',\r\n  templateUrl: './navbar.component.html'\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private translate: TranslateService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  switchLanguaje() {\r\n    if ( this.translate.currentLang === 'es' ) {\r\n      return this.translate.use( 'en' );\r\n    }\r\n    if ( this.translate.currentLang === 'en' ) {\r\n      return this.translate.use( 'es' );\r\n    }\r\n    console.log( this.translate.currentLang)\r\n  }\r\n\r\n  coincideWithRoute(route: string): boolean {\r\n    const result = this.router.url.includes( route );\r\n    return result;\r\n  }\r\n\r\n}\r\n","<nav class=\"container_navbar\">\r\n  <section class=\"navbar_item\">\r\n    <div class=\"item_part\">\r\n      <div class=\"part_item\">\r\n        <div class=\"item_brand\">\r\n          <h5 routerLink=\"about\" routerLinkActive=\"router_active\">\r\n            {{ 'NAVBAR.Labels.init' | translate }}\r\n          </h5>\r\n        </div>\r\n        <div class=\"item_brand\">\r\n          <h5 routerLink=\"games\" routerLinkActive=\"router_active\">\r\n            {{ 'NAVBAR.Labels.games' | translate }}\r\n          </h5>\r\n        </div>\r\n        <div class=\"item_brand\">\r\n          <h5 (click)=\"switchLanguaje()\">\r\n            {{ 'NAVBAR.Labels.switchLanguaje' | translate }}\r\n          </h5>\r\n        </div>\r\n        <div class=\"item_brand\">\r\n          <h5 routerLink=\"curriculum\" routerLinkActive=\"router_active\">\r\n            {{ 'NAVBAR.Labels.curriculum' | translate }}\r\n          </h5>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</nav>\r\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\n\r\n/**\r\n * Directiva que solo permite le uso de numeros, bacspace y el punto\r\n */\r\n\r\n@Directive( {\r\n  selector: '[nsOnlyNumber]'\r\n} )\r\nexport class OnlyNumberDirective {\r\n  private readonly allowKeys = [ '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', '-', 'ArrowLeft', 'ArrowRight', 'Backspace', 'Delete' ];\r\n\r\n  constructor( private el: ElementRef ) { }\r\n\r\n  @HostListener( 'keydown', [ '$event' ] )\r\n  allowIfNumber( ev: KeyboardEvent ) {\r\n    if ( this.el.nativeElement === ev.target ) {\r\n      if ( this.allowKeys.some( el => el === ev.key ) === false ) {\r\n        ev.preventDefault();\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","import { ChronoStatusTimeLabelType } from '../types/chrono-status-time-label.type';\r\nexport class ChronoStatusTime {\r\n  constructor(\r\n    public chrono?: number,\r\n    public label: ChronoStatusTimeLabelType = 'seg'\r\n  ) { }\r\n}","export class DeviceInfo {\r\n  constructor(\r\n    public type: 'desktop' | 'tablet' | 'mobile' = null,\r\n    public width: number = null,\r\n  ) {}\r\n}","import { Injectable } from '@angular/core';\r\nimport { fromEvent, Subject } from 'rxjs';\r\nimport { pluck, tap, takeUntil } from 'rxjs/operators';\r\nimport { DeviceInfo } from '../../models/device-info.model';\r\nimport { SubscriptionsFinisher } from '../../abstract/subscriptions-finisher.class';\r\nimport { DeviceInfoType } from '../../types/device-info.type';\r\n\r\n@Injectable( {\r\n  providedIn: 'root'\r\n} )\r\nexport class UtilsService extends SubscriptionsFinisher {\r\n\r\n  deviceType$: Subject<DeviceInfo> = new Subject();\r\n\r\n  constructor() {\r\n    super()\r\n  }\r\n\r\n  initObservables() {\r\n    this.getWindowSize();\r\n  }\r\n\r\n  getWindowSize() {\r\n    const checkWidth = ( x: number ): DeviceInfoType => {\r\n      if ( x > 768 ) return \"desktop\";\r\n      if ( x <= 768 && x > 425 ) return \"tablet\";\r\n      if ( x <= 425 ) return \"mobile\";\r\n    }\r\n    let device: DeviceInfo = new DeviceInfo( checkWidth( window.innerWidth ), window.innerWidth );\r\n    fromEvent( window, 'resize' )\r\n      .pipe(\r\n        takeUntil( this.finishTakeUntil$ ),\r\n        pluck( 'target' ),\r\n        tap<Window>( ( { innerWidth } ) => {\r\n          device.width = innerWidth;\r\n          device.type = checkWidth( innerWidth );\r\n          this.deviceType$.next( device );\r\n        } )\r\n      ).subscribe()\r\n  }\r\n\r\n  capitalizeText( text: string ) {\r\n    let lowercased = text.toLowerCase();\r\n    return lowercased.replace( lowercased[ 0 ], lowercased[ 0 ].toUpperCase() );\r\n  }\r\n\r\n  checkIsNumber( ev: string | number ) {\r\n    return ev >= 0 && ev > 10 ? ev : 0;\r\n  }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ButtonComponent } from '../components/button/button.component';\r\nimport { OnlyNumberDirective } from '../directives/only-number/only-number.directive';\r\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ButtonComponent,\r\n    OnlyNumberDirective\r\n  ],\r\n  exports: [\r\n    ButtonComponent,\r\n    OnlyNumberDirective,\r\n    TranslateModule\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    TranslateModule\r\n  ],\r\n  providers: [TranslateService]\r\n})\r\nexport class SharedModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}